SHOW TABLES;

CREATE TABLE FAMILLE
(
  FAM_ID   INTEGER,
  FAM_LIB  VARCHAR(16),
  FAM_PERE INTEGER
);


INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (0, 'Transport', NULL);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (1, 'Terrestre', 0);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (2, 'Marin', 0);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (3, 'Aérien', 0);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (4, 'Voiture', 1);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (5, 'Camion', 1);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (6, 'Moto', 1);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (7, 'Vélo', 1);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (8, 'Hélico', 3);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (9, 'Avion', 3);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (10, 'ULM', 3);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (11, 'Fusée', 3);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (12, 'Parachute', 3);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (13, 'Planeur', 3);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (14, 'Voilier', 2);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (15, 'Paquebot', 2);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (16, 'Planche à voile', 2);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (17, 'Trail', 6);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (18, 'Side-car', 6);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (19, 'Civil', 9);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (20, 'Tourisme', 9);
INSERT INTO FAMILLE (FAM_ID, FAM_LIB, FAM_PERE) VALUES (21, 'Militaire', 9);

ALTER TABLE arbre.famille ADD PRIMARY KEY (FAM_ID);

SELECT *
FROM FAMILLE;


-- Recherche du 'père' du parachute (id = 12)
SELECT *
FROM FAMILLE
WHERE FAM_ID = (SELECT FAM_PERE
                FROM FAMILLE
                WHERE FAM_ID = 12);

-- Recherche récursive de tous les ascendants
DROP PROCEDURE IF EXISTS `RecherchePeres`;

DELIMITER |
CREATE PROCEDURE RecherchePeres(
  IN    id      INT,
  INOUT reponse VARCHAR(255)
)
  BEGIN
    SET reponse = reponse + ', ' + (SELECT FAM_LIB
                                    FROM FAMILLE
                                    WHERE FAM_ID = ID);
    IF id > 0
    THEN
      SET id = (SELECT FAM_PERE
                FROM FAMILLE
                WHERE FAM_ID = ID);
    END IF;
  END |
DELIMITER ;


CALL RecherchePeres(12, @reponse);
